#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <ctype.h>
#include <unistd.h>
#include <string.h>
#include <semaphore.h>

void *accion(void *arg);



sem_t se_maxi;
sem_t se_iniciar[8];
sem_t se_terminar[8];

int main(int argc, char *argv[]){

int N3= atoi(argv[1]);
pthread_t id[N3];
int j;
int teclo;

	for(int k = 1; k <= N3; k++){ 
	int *n = &k;
	j = pthread_create(&id[k], NULL, &accion,(void *) n);
		if(j != 0){printf("error en creacion");}
	sem_init(&se_iniciar[k],0,0);
	sem_init(&se_terminar[k],0,0);
	}

printf("\nNumero de escritores: %i",N3);

	while( teclo != 3){
	printf("\n1. Intentar escribir");
	printf("\n2. Finalizar escribir");
	printf("\n3. Salir\n");	
	scanf("%d",&teclo);
	
		if(teclo == 1){ 
		printf("\n>Introduzca el numero del escritor(de 1 a N3");
		scanf("%i",&teclo);
		sem_post(&se_iniciar[teclo]);
		
		}else if(teclo == 2){
		printf("\n>Introduzca el numero del escritor(de 1 a N3");
		scanf("%i",&teclo);
		sem_post(&se_terminar[teclo]);				
		}
	} 


printf("\nFIN del codigo principal\n");
return 0;
}

void *accion(void *arg){
	int *n;
	n = (int *)arg;
	
	while(1){
	sem_wait(&se_iniciar[(int)n]);
	printf("[\nEscritor %i]-> Esperando a intentar escribir...",n);
	printf("[\nEscritor %i]-> Intentando escribir...",n);
	printf("[\nEscritor %i]-> Escribiendo...",n);
	sem_wait(&se_terminar[(int)n]);
	printf("\n[Escritor %i]-> Fin escritura...",n);
	}
pthread_exit(NULL);
}

